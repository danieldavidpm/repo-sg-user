// <auto-generated />
using System;
using AccesoDatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccesoDatos.Migrations
{
    [DbContext(typeof(DbContextConfig))]
    partial class DbContextConfigModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entidades.App", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("App", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "App Users Management"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "SAIGNa Web"
                        });
                });

            modelBuilder.Entity("Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Solumaxt Eirl."
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "SG Hidrocarburos"
                        });
                });

            modelBuilder.Entity("Entidades.Modulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Modulo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Administración del sistema"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Gestión comercial"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Construcción Internas"
                        });
                });

            modelBuilder.Entity("Entidades.Operaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdMod")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdMod");

                    b.ToTable("Operaciones", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdMod = 1,
                            Nombre = "Creación de usuarios"
                        },
                        new
                        {
                            Id = 2,
                            IdMod = 1,
                            Nombre = "Actualización de usuarios"
                        },
                        new
                        {
                            Id = 3,
                            IdMod = 2,
                            Nombre = "Consultar todas las ventas"
                        },
                        new
                        {
                            Id = 4,
                            IdMod = 2,
                            Nombre = "Creación de contratos"
                        });
                });

            modelBuilder.Entity("Entidades.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Rol", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Soporte"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Administrador"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Vendedor"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Coordinado de ventas"
                        });
                });

            modelBuilder.Entity("Entidades.RolOpe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdOpe")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdOpe");

                    b.HasIndex("IdRol");

                    b.ToTable("RolOpe", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdOpe = 2,
                            IdRol = 2
                        },
                        new
                        {
                            Id = 2,
                            IdOpe = 3,
                            IdRol = 2
                        },
                        new
                        {
                            Id = 3,
                            IdOpe = 4,
                            IdRol = 2
                        },
                        new
                        {
                            Id = 4,
                            IdOpe = 4,
                            IdRol = 3
                        },
                        new
                        {
                            Id = 5,
                            IdOpe = 3,
                            IdRol = 4
                        },
                        new
                        {
                            Id = 6,
                            IdOpe = 4,
                            IdRol = 4
                        });
                });

            modelBuilder.Entity("Entidades.UsuApp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdApp")
                        .HasColumnType("int");

                    b.Property<int>("IdUsu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdApp");

                    b.HasIndex("IdUsu");

                    b.ToTable("UsuApp", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdApp = 2,
                            IdUsu = 3
                        },
                        new
                        {
                            Id = 2,
                            IdApp = 2,
                            IdUsu = 4
                        });
                });

            modelBuilder.Entity("Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("ImagenPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "dani@gmail.com",
                            FechaVencimiento = new DateTime(2023, 6, 19, 19, 12, 6, 556, DateTimeKind.Local).AddTicks(9465),
                            IdCliente = 1,
                            IdRol = 1,
                            Nombre = "Daniel Perez"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jhon@gmail.com",
                            FechaVencimiento = new DateTime(2023, 6, 19, 19, 12, 6, 556, DateTimeKind.Local).AddTicks(9476),
                            IdCliente = 1,
                            IdRol = 1,
                            Nombre = "Jhon Chonta"
                        },
                        new
                        {
                            Id = 3,
                            Email = "marco@gmail.com",
                            FechaVencimiento = new DateTime(2023, 6, 19, 19, 12, 6, 556, DateTimeKind.Local).AddTicks(9477),
                            IdCliente = 2,
                            IdRol = 3,
                            Nombre = "Marco Tarmeño"
                        },
                        new
                        {
                            Id = 4,
                            Email = "abi@gmail.com",
                            FechaVencimiento = new DateTime(2023, 6, 19, 19, 12, 6, 556, DateTimeKind.Local).AddTicks(9478),
                            IdCliente = 2,
                            IdRol = 4,
                            Nombre = "Abigail Garcia"
                        });
                });

            modelBuilder.Entity("Entidades.Operaciones", b =>
                {
                    b.HasOne("Entidades.Modulo", "modulo")
                        .WithMany("Operaciones")
                        .HasForeignKey("IdMod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("modulo");
                });

            modelBuilder.Entity("Entidades.RolOpe", b =>
                {
                    b.HasOne("Entidades.Operaciones", "operaciones")
                        .WithMany("RolOpes")
                        .HasForeignKey("IdOpe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Rol", "rol")
                        .WithMany("RolOpes")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("operaciones");

                    b.Navigation("rol");
                });

            modelBuilder.Entity("Entidades.UsuApp", b =>
                {
                    b.HasOne("Entidades.App", "app")
                        .WithMany("UsuApps")
                        .HasForeignKey("IdApp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entidades.Usuario", "usuario")
                        .WithMany("UsuApps")
                        .HasForeignKey("IdUsu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("app");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Entidades.Usuario", b =>
                {
                    b.HasOne("Entidades.Cliente", "cliente")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entidades.Rol", "rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("cliente");

                    b.Navigation("rol");
                });

            modelBuilder.Entity("Entidades.App", b =>
                {
                    b.Navigation("UsuApps");
                });

            modelBuilder.Entity("Entidades.Cliente", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Entidades.Modulo", b =>
                {
                    b.Navigation("Operaciones");
                });

            modelBuilder.Entity("Entidades.Operaciones", b =>
                {
                    b.Navigation("RolOpes");
                });

            modelBuilder.Entity("Entidades.Rol", b =>
                {
                    b.Navigation("RolOpes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Entidades.Usuario", b =>
                {
                    b.Navigation("UsuApps");
                });
#pragma warning restore 612, 618
        }
    }
}
